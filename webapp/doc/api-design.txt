# Claire Williams and Luisa Escosteguy

REQUEST: /games
RESPONSE: a JSON list of dictionaries, each of which represents one
game, sorted by global sales limited by 400. Each game dictionary will have the
following fields.

   name -- (string) the title of the game
   global_sales -- (integer) number of global sales of the game
   publisher -- (string) the publisher of the game
   platform -- (string) the platform of the game
   genre -- (string) genre of the game
   year -- (integer) year of publication

EXAMPLES:
   No GET parameter: [{"name": "Wii Sports", "year": 2006, "publisher": "Nintendo", "genre": "Sports", "platform": "Wii", "sales": "82.53"}, 
   {"name": "Super Mario Bros.", "year": 1985, "publisher": "Nintendo", "genre": "Platform", "platform": "NES", "sales": "40.24"}, ...]

REQUEST: /platforms
RESPONSE: an alphabetized JSON list of strings, each of which is an platform.
EXAMPLE: ["2600", "3DO", "3DS", ... ]

REQUEST: /publishers
RESPONSE: an alphabetized JSON list of strings, each of which is an publisher.
EXAMPLE: ["10TACLE Studios", "1C Company", "20th Century Fox Video Games", ... ]

REQUEST: /genres
RESPONSE: an alphabetized JSON list of strings, each of which is an genre.
EXAMPLE: ["Action", "Adventure", "Fighting", ... ]

REQUEST: /categories
RESPONSE: returns a JSON dictionary with the categorical entries and their values for the dataset. 
EXAMPLE: 
{
   'platforms': ['Wii', 'PS2', 'GB', 'DS', 'X360'],
   'genres': ['Action', 'Sports', 'Shooter', 'Role-Playing', 'Platform'],
   'publishers': ['Electronic Arts', 'Activision', 'Ubisoft', 'Nintendo', 'Namco Bandai Games']
}

REQUEST: /platform?name={text}
RESPONSE: a JSON list of dictionaries, each of which represents the games in the specified platform

   name -- (string) the title of the game
   global_sales -- (integer) number of global sales of the game
   publisher -- (string) the publisher of the game
   platform -- (string) the platform of the game
   genre -- (string) genre of the game
   year -- (integer) year of publication
   na -- (integer) North America sales of the game
   eu -- (integer) Europe sales of the game
   jp -- (integer) Japan sales of the game
   user_score -- (decimal) user score of the game
   critic_score --(decimal) critic score of the game
EXAMPLE(S):

REQUEST: /publisher?name={text}
RESPONSE: a JSON list of dictionaries, each of which represents the games of the specified publisher

   name -- (string) the title of the game
   global_sales -- (integer) number of global sales of the game
   publisher -- (string) the publisher of the game
   platform -- (string) the platform of the game
   genre -- (string) genre of the game
   year -- (integer) year of publication
   na -- (integer) North America sales of the game
   eu -- (integer) Europe sales of the game
   jp -- (integer) Japan sales of the game
   user_score -- (decimal) user score of the game
   critic_score --(decimal) critic score of the game
EXAMPLE(S):

REQUEST: /genre?name={text}
RESPONSE: a JSON list of dictionaries, each of which represents games of the specified genre

   name -- (string) the title of the game
   global_sales -- (integer) number of global sales of the game
   publisher -- (string) the publisher of the game
   platform -- (string) the platform of the game
   genre -- (string) genre of the game
   year -- (integer) year of publication
   na -- (integer) North America sales of the game
   eu -- (integer) Europe sales of the game
   jp -- (integer) Japan sales of the game
   user_score -- (decimal) user score of the game
   critic_score --(decimal) critic score of the game
EXAMPLE(S):